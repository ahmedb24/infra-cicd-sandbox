name: FinServe CI/CD DevSecOps

'on':
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.ref_name == 'main' && './terraform/envs/production' || './terraform/envs/staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Init Terraform (staging)
        run: |
          terraform init

      - name: Validate Terraform
        run: |
          terraform validate      
          
      - name: Create tfvars file in staging
        run: |
          echo "${{ secrets.TF_VARS_STAGING }}" > terraform.tfvars
        if: github.ref == 'refs/heads/staging'

      - name: Create tfvars file in production
        run: |
          echo "${{ secrets.TF_VARS_PROD }}" > terraform.tfvars
        if: github.ref == 'refs/heads/main'
      
      - name: Plan Terraform
        run: |
          terraform plan -var-file="terraform.tfvars"

      - name: IaC Security Scan (Checkov)
        run: |
          chmod +x ../../../scripts/scan-terraform.sh
          ../../../scripts/scan-terraform.sh

  container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t hello-nginx:latest ./app/Dockfile

      - name: Container Security Scan (Trivy)
        run: |
          chmod +x ./scripts/scan-image.sh
          ./scripts/scan-image.sh hello-nginx:latest

  patch-vm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Run patch script
        run: |
          chmod +x ./scripts/patch-vm.sh
          ./scripts/patch-vm.sh

  # secrets:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Load secrets from .env
  #       run: |
  #         export $(grep -v '^#' .env | xargs)
  #         echo "DB_PASSWORD loaded from env"

  #     - name: Load secrets from mock key vault
  #       run: |
  #         DB_PASSWORD=$(jq -r '.["db-password"]' mock-keyvault.json)
  #         echo "Loaded DB password from mock vault"

  deploy:
    name: Deploy Hello App to Kind
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Kind
        uses: helm/kind-action@v1.9.0
        with:
          version: v0.22.0

      - name: Create Kind Cluster
        run: kind create cluster --name finserve --wait 60s

      - name: Deploy NGINX app
        run: |
          kubectl create deployment hello-nginx --image=nginx
          kubectl expose deployment hello-nginx --port=80 --target-port=80 --type=NodePort

      - name: Wait for rollout
        run: kubectl rollout status deployment/hello-nginx

      - name: Smoke Test App
        run: |
          kubectl get svc hello-nginx
          kubectl run curl --image=curlimages/curl -i --rm --restart=Never -- \
            curl http://hello-nginx.default.svc.cluster.local